/*
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
*/
ext.deps = [:]
def versions = [:]
// Core
versions.lifecycle = "2.1.0"
versions.app_compat = "1.1.0"
versions.material_design = "1.1.0-beta02"
versions.cardview = "1.0.0"
versions.recyclerview = "1.1.0"
versions.swiperefreshlayout = "1.0.0"
versions.viewpager2 = "1.0.0"
versions.fragment = "1.2.0"
versions.arch_core = "2.0.0"
versions.constraint_layout = "2.0.0-beta3"
versions.data_binding = "3.5.0"
versions.kotlin = "1.3.60"
// Architecture Components
versions.arch = "2.0.1"
versions.room = "2.2.5"
// Anko
versions.anko = "0.10.8"
// Caching
versions.realm_gradle_plugin = "6.0.2"
// Dependency Injection
versions.koin = "2.0.1"
// firebase
versions.firebase_analytics = "17.4.3"
versions.firebase_messaging = "20.2.1"
versions.firebase_crashlytics = "17.1.0"
versions.firebase_appdistribution_plugin = "1.2.0"
versions.firebase_crashlytics_plugin = "2.2.0"
// Unit Test
versions.junit = "4.12"
versions.test_core = "1.2.0"
versions.test_junit = "1.1.1"
versions.test_truth = "1.2.0"
versions.livedata_testing = "1.1.0"
// Mockito
versions.mockito = "2.25.0"
versions.mockito_kotlin = "2.2.0"
// UI Test
versions.espresso = "3.2.0"
versions.ui_automator = "2.2.0"
// google
versions.gms_plugin = "4.3.3"
// HTTP & Rest
versions.retrofit = "2.5.0"
versions.okhttp_logging_interceptor = "3.11.0"
versions.apache_commons = "2.5"
versions.timber = "4.7.1"
versions.android_gradle_plugin = '4.0.1'
versions.ktlint_gradle = "9.1.1"
// RxJava
versions.rxjava2 = "2.2.7"
versions.rxkotlin = "2.3.0"
versions.rx_android = "2.1.1"
// Glide
versions.glide = "4.11.0"
// Others
versions.hamcrest = "1.3"
versions.navigation = "2.2.2"
versions.leakcanary = "2.0"
versions.segment_analytics = "3.0.2"
// does not implement interface 'com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener'
versions.branch_io = "4.3.2"
versions.embrace = "4.2.7"
versions.stripe = "11.0.1"
versions.json = "20180130"
versions.assertj = "3.11.1"
versions.urbanairship = "11.0.1"
versions.ktx = "1.1.0"
versions.detekt_plugin = "1.2.1"
versions.viewpager_indicator = "1.0.3"
versions.about_libraries = "8.0.0-rc01"
versions.lottie = "3.3.1"
versions.shimmer = "0.5.0"
versions.zendesk = "2.0.0"
versions.paycards = "1.1.0"
versions.generated_annotation = "1.0"

def deps = [:]

def support = [:]
support.app_compat = "androidx.appcompat:appcompat:$versions.app_compat"
support.cardview = "androidx.cardview:cardview:$versions.cardview"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
support.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefreshlayout"
support.viewpager2 = "androidx.viewpager2:viewpager2:$versions.viewpager2"
support.design = "com.google.android.material:material:$versions.material_design"
support.fragment = "androidx.fragment:fragment:$versions.fragment"
support.fragment_testing = "androidx.fragment:fragment-testing:$versions.fragment"
deps.support = support

def ktx = [:]
ktx.core = "androidx.core:core-ktx:$versions.ktx"
deps.ktx = ktx

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.reactive_streams_ktx = "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.ktx = "androidx.room:room-ktx:$versions.room"
room.rxjava = "androidx.room:room-rxjava2:$versions.room"
deps.room = room

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.scalars = "com.squareup.retrofit2:converter-scalars:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def koin = [:]
koin.runtime = "org.koin:koin-android:$versions.koin"
koin.androidx_scope = "org.koin:koin-androidx-scope:$versions.koin"
koin.androidx_view_model = "org.koin:koin-androidx-viewmodel:$versions.koin"
koin.test = "org.koin:koin-test:$versions.koin"
deps.koin = koin

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def test = [:]
test.core = "androidx.test:core:$versions.test_core"
test.runner = "androidx.test:runner:$versions.test_core"
test.rules = "androidx.test:rules:$versions.test_core"
test.junit = "androidx.test.ext:junit-ktx:$versions.test_junit"
test.truth = "androidx.test.ext:truth:$versions.test_truth"
test.ui_automator = "androidx.test.uiautomator:uiautomator:$versions.ui_automator"
deps.test = test

def mockito = [:]
mockito.inline = "org.mockito:mockito-inline:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
mockito.kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
deps.mockito = mockito

def assertj = [:]
assertj.core = "org.assertj:assertj-core:$versions.assertj"
deps.assertj = assertj

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def firebase = [:]
firebase.analytics = "com.google.firebase:firebase-analytics:$versions.firebase_analytics"
firebase.messaging = "com.google.firebase:firebase-messaging:$versions.firebase_messaging"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics:$versions.firebase_crashlytics"
firebase.appdistribution_plugin = "com.google.firebase:firebase-appdistribution-gradle:$versions.firebase_appdistribution_plugin"
firebase.crashlytics_plugin = "com.google.firebase:firebase-crashlytics-gradle:$versions.firebase_crashlytics_plugin"
deps.firebase = firebase

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rxkotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.ktlint_gradle = "org.jlleitschuh.gradle:ktlint-gradle:$versions.ktlint_gradle"
deps.realm_gradle_plugin = "io.realm:realm-gradle-plugin:$versions.realm_gradle_plugin"
deps.livedata_testing = "com.jraska.livedata:testing-ktx:$versions.livedata_testing"
deps.segment_analytics = "com.segment.analytics.android.integrations:amplitude:$versions.segment_analytics"
deps.branch_io = "io.branch.sdk.android:library:$versions.branch_io"
deps.embrace = "embrace-io:embrace-swazzler:$versions.embrace"
deps.stripe = "com.stripe:stripe-android:$versions.stripe"
deps.json = "org.json:json:$versions.json"
deps.urbanairship_fcm = "com.urbanairship.android:urbanairship-fcm:$versions.urbanairship"
deps.detekt_plugin = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt_plugin"
deps.viewpager_indicator = "com.romandanylyk:pageindicatorview:$versions.viewpager_indicator"
deps.lottie = "com.airbnb.android:lottie:$versions.lottie"
deps.shimmer = "com.facebook.shimmer:shimmer:$versions.shimmer"
deps.zendesk = "com.zendesk:chat-providers:$versions.zendesk"
deps.generated_annotation = "com.github.pengrad:jdk9-deps:$versions.generated_annotation"
ext.deps = deps

def gms = [:]
gms.plugin = "com.google.gms:google-services:$versions.gms_plugin"
deps.gms = gms

def data_binding = [:]
data_binding.library = "androidx.databinding:databinding-runtime:$versions.data_binding"
data_binding.adapters = "androidx.databinding:databinding-adapters:$versions.data_binding"
deps.data_binding = data_binding

def leakcanary = [:]
leakcanary.runtime = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
deps.leakcanary = leakcanary

def build_versions = [:]
build_versions.min_sdk = 22
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.2"
ext.build_versions = build_versions

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def anko = [:]
anko.commons = "org.jetbrains.anko:anko-commons:$versions.anko"
deps.anko = anko

def about_libraries = [:]
about_libraries.plugin = "com.mikepenz.aboutlibraries.plugin:aboutlibraries-plugin:$versions.about_libraries"
about_libraries.library = "com.mikepenz:aboutlibraries:$versions.about_libraries"
deps.about_libraries = about_libraries

def paycards = [:]
paycards.recognizer = "cards.pay:paycardsrecognizer:$versions.paycards"
deps.paycards = paycards

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos

def buildScriptRepo(RepositoryHandler handler) {
    addRepos(handler)
    handler.maven { url "https://plugins.gradle.org/m2/" }
}

ext.buildScriptRepo = this.&buildScriptRepo

def allProjectsRepo(RepositoryHandler handler) {
    addRepos(handler)
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
}

ext.allProjectsRepo = this.&allProjectsRepo
